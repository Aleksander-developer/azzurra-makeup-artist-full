# azzurra-makeup-artist-fe/nginx.conf
server {
  listen ${PORT}; # <-- MODIFICATO: Nginx ascolterà sulla porta definita dalla variabile d'ambiente PORT

  root /usr/share/nginx/html; # Ora punta direttamente alla root di Nginx, dove i file sono stati copiati
  index index.html; # Specificato solo index.html, più comune per Angular

  # Imposta gli header di sicurezza, inclusa la Content-Security-Policy
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-Content-Type-Options "nosniff";
  add_header X-XSS-Protection "1; mode=block";
  add_header Referrer-Policy "no-referrer-when-downgrade";

  # Content-Security-Policy: Consenti solo risorse dalla stessa origine ('self')
  # e dati inline (per stili/immagini base64)
  # Adatta queste direttive alle tue esigenze specifiche!
  add_header Content-Security-Policy "
    default-src 'self';
    script-src 'self' 'unsafe-inline' 'unsafe-eval'; # 'unsafe-eval' è spesso necessario per Angular JIT in dev, rimuovi in prod se possibile
    style-src 'self' 'unsafe-inline';
    img-src 'self' data: https://res.cloudinary.com; # Consenti immagini dalla stessa origine e da Cloudinary
    font-src 'self';
    connect-src 'self' https://azzurra-backend-1094999227512.europe-west1.run.app; # Consenti connessioni al tuo backend
    object-src 'none';
    base-uri 'self';
    form-action 'self';
    frame-ancestors 'none';
  " always; # 'always' assicura che l'header sia sempre inviato

  location / {
    try_files $uri $uri/ /index.html =404; # Aggiunto =404 per una gestione esplicita del not found
  }

  # Reindirizza le richieste API al backend
  # Questo è opzionale se il tuo frontend usa già l'URL completo del backend.
  # Se lo abiliti, il tuo frontend può chiamare /api/your-endpoint e Nginx lo reindirizzerà.
  location /api/ {
    proxy_pass https://azzurra-backend-1094999227512.europe-west1.run.app/api/;
    proxy_set_header Host azzurra-backend-1094999227512.europe-west1.run.app;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}